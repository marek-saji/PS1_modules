#!/bin/bash

. ./git_rebase
. ./git_merge

if [ "UTF-8" = "$( locale charmap )" ]
then
    PS1_git_label__UTF8_SUPPORT=1
else
    PS1_git_label__UTF8_SUPPORT=
fi

##
# Print where we are, gitwise
#
# Params:
# - $1: Will be prepended to printed value, if any.
# - $2: Will be appended to printed value, if any.
# - $3: Will be prepended to upstream branch name, if any
# - $4: String to use in place of local branch's name if it's a suffix
#       of remote branch's name
# - $5: Will be prepended to tag names, if any
PS1_git_label () {
    LABEL="$( PS1_git_branch__get_label )"

    if [ -n "$LABEL" ]
    then
        if ( command git config --get alias.grows-from > /dev/null )
        then
            BRANCH="$( PS1_git_branch__get_branch )"
            UPSTREAM="$( command git grows-from "$BRANCH" )"
            if [ "$BRANCH" = "$UPSTREAM" ]
            then
                UPSTREAM=
            fi
        else
            UPSTREAM="$( PS1_git_branch__get_upstream )"
        fi

        REMOTE="${UPSTREAM%$( printf "/%s" "${LABEL}" )}"
        if [ "${REMOTE}" != "${UPSTREAM}" ]
        then
            UPSTREAM="${REMOTE}/$4"
        fi

        GIT_DIR="$( command git rev-parse --git-dir )"
        REBASE_LABEL=
        if [ -f "${GIT_DIR}/rebase-merge/interactive" ]
        then
            LABEL="$( command git rev-parse --abbrev-ref "$( cat "${GIT_DIR}/rebase-merge/head-name" )" )"
            if [ -n "${PS1_git_label__UTF8_SUPPORT}" ]
            then
                LABEL="𝓲𝓷𝓽𝓮𝓻𝓪𝓬𝓽𝓲𝓿𝓮𝓵𝔂 𝓻𝓮𝓫𝓪𝓼𝓲𝓷𝓰 ${LABEL}"
            else
                LABEL="interactively rebasing ${LABEL}"
            fi
        elif [ -d "${GIT_DIR}/rebase-merge" ]
        then
            LABEL="$( command git rev-parse --abbrev-ref "$( cat "${GIT_DIR}/rebase-merge/head-name" )" )"
            if [ -n "${PS1_git_label__UTF8_SUPPORT}" ]
            then
                LABEL="𝓻𝓮𝓫𝓪𝓼𝓲𝓷𝓰 ${LABEL}"
            else
                LABEL="rebasing ${LABEL}"
            fi
        elif [ -d "${GIT_DIR}/rebase-apply" ]
        then
            if [ -f "${GIT_DIR}/rebase-apply/rebasing" ]
            then
                if [ -n "${PS1_git_label__UTF8_SUPPORT}" ]
                then
                    LABEL="𝓻𝓮𝓫𝓪𝓼𝓲𝓷𝓰 ${LABEL}"
                else
                    LABEL="rebasing ${LABEL}"
                fi
            elif [ -f "${GIT_DIR}/rebase-apply/applying" ]
            then
                if [ -n "${PS1_git_label__UTF8_SUPPORT}" ]
                then
                    LABEL="𝓪𝓹𝓹𝓵𝔂𝓲𝓷𝓰 𝓹𝓪𝓽𝓬𝓱𝓮𝓼 𝓽𝓸 ${LABEL}"
                else
                    LABEL="applying patches to ${LABEL}"
                fi
            else
                if [ -n "${PS1_git_label__UTF8_SUPPORT}" ]
                then
                    LABEL="𝓻𝓮𝓫𝓪𝓼𝓲𝓷𝓰 𝓸𝓻 𝓪𝓹𝓹𝓵𝔂𝓲𝓷𝓰 𝓹𝓪𝓽𝓬𝓱𝓮𝓼 𝓽𝓸 ${LABEL}"
                else
                    LABEL="rebasing or applying patches to ${LABEL}"
                fi
            fi
        fi

        test -n "${UPSTREAM}" && LABEL="${LABEL}$3${UPSTREAM}"

        TAGS="$( PS1_git_branch__get_tags )"
        test -n "${TAGS}" && LABEL="${LABEL}$5${TAGS}"

        printf "$1$LABEL$2"
    fi
}

##
# Get active git branch name.
PS1_git_branch__get_branch () {
    command git rev-parse --abbrev-ref HEAD 2>/dev/null
}

##
# Get upstream branch of an active branch
PS1_git_branch__get_upstream () {
    UPSTREAM_BRANCH="$( command git rev-parse --revs-only --abbrev-ref $( PS1_git_branch__get_branch )@{u} 2>/dev/null )"
    echo ${UPSTREAM_BRANCH:-(gone)}
}

##
# Get tag names pointing to HEAD
PS1_git_branch__get_tags () {
    command git describe --exact-match --tags HEAD 2>/dev/null
}

##
# Get active git branch human readable name.
PS1_git_branch__get_label () {
    command git branch 2>/dev/null | GREP_OPTIONS= grep '^\*' | cut -b3-
}
