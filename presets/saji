#!/bin/bash
# (c) Marek `saji' Augustynowicz

##
# {PATH_BREADCRUMBS}{DIR_STACK_SIZE} {GIT_TAG}{GIT_STASH_COUNT} {VIM_SUBSHELL} {USER_AND_HOST} {TIME} {LASTCMD_INFO}
# {PROMPT}
#
# It may look like this:
#
# ~/foo/bar/zar+2 (zar-1.0)+3 (vim subshell) user@hostname 13:37 ↖ 1s 1
# $
#
# screenshot: http://i.imgur.com/d6W5mwO.png
##

# Have to change directory to `modules/`, as modules depend on
# that when loading other modules.
cd "$( dirname "${BASH_ARGV[0]}" )/../modules"
. ./breadcrumbs
. ./dirstack_size
. ./git_branch
. ./git_counters
. ./git_status
. ./lastcmd
. ./subshell_vim
. ./dropbox
#                  bold red,  bold green
. ./user_and_host '\e[0;31m' '\e[0;32m'
# updates screen(1)'s and terminal's titles
. ./titles
cd - >/dev/null

export PS1='$(
    # four colours for four levels of directories
    #                bold cyan, bold blue, blue,      bold balck
    PS1_breadcrumbs "\e[1;36m" "\e[1;34m" "\e[0;34m" "\e[1;30m"

    # indicator whether dropbox is syncing current directory
    PS1_dropbox " \e[1;34m⟳"

    # size of stack created using `pushd`
    #                 bold black
    PS1_dirstack_size "\e[1;30m"

    # current git branch name
    #             blue
    PS1_git_branch " \e[0;34m"

    # git counters:  stashed,    behind,     ahead
    #                bold black, blue,       bold blue
    PS1_git_counters "\e[1;30m+" "\e[0;34m⊝" "\e[1;34m⊕"

    # git status:  staging,    working copy
    #              bold cyan, cyan
    PS1_git_status "\e[1;36m" "\e[0;36m"

    # indicator whether we are in a vim subshell
    #                 bold black
    PS1_subshell_vim " \e[1;30m"
    # username and hostname, current time (silver)
) '"$PS1_user_and_host"' \e[0;37m\A$(
    # duration of last executed command and
    # status of last executed command, if different than "0"
    #             bold black, bold red
    PS1_lastcmd " \e[1;30m" "\e[0;31m"
    # command prompt in user-specific colour (red for root)
)\e[0m\n$ '
# these variables are no longer needed
unset PS1_user_and_host

trap $PS1_debug_trap DEBUG
